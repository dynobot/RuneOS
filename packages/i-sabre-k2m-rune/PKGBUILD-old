# Maintainer: gearhead
# Contributor:

 	pkgname=i-sabre-k2m-rune
 	_pkgname=I-Sabre-K2M
	pkgver=0.0.1
	pkgrel=1
	pkgdesc="i-sabre-k2m kernel module"
	url="https://github.com/SatoruKawase/I-Sabre-K2M.git"
	arch=('armv6h' 'armv7h')
	license=('GPLv2')
	depends=('linux')
	makedepends=('linux-headers' 'git')
	#provides=('i-sabre-k2m.ko.gz')
	#conflicts=('i-sabre-k2m.ko.gz')
	
	source=("$_pkgname::git+https://github.com/SatoruKawase/I-Sabre-K2M.git")
	sha256sums=('SKIP')
	
	_extramodules="$(basename $(readlink -f /lib/modules/$(uname -r)/extramodules/))"

	pkgver() {
	  cd "$_pkgname"
	  printf "0.r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
	}
	
	prepare() {
	  # get current kernel version
	  #kernel_dir=uname-r
	  cd "${srcdir}"/"$_pkgname"
	msg2 "Renamimg codec to match module"
	  # use sed and mv to change the codec name from i-sabre-codec to i-sabre-q2m-codec
	  mv i-sabre-codec.h i-sabre-k2m-codec.h
	  mv i-sabre-codec.c i-sabre-k2m-codec.c
          find ./ -type f -exec sed -i 's/i-sabre-codec/i-sabre-k2m-codec/g' {} \;
	msg2 "editing code to reflect later kernel"
           find ./ -type f -exec sed -i 's/snd_soc_codec *codec = rtd->codec/snd_soc_component *component = rtd->codec_dai->component/g' {} \;
           find ./ -type f -exec sed -i 's/snd_soc_read(codec/snd_soc_component_read32(component/g' {} \;
           find ./ -type f -exec sed -i 's/(codec->dev/(component->card->dev/g' {} \;
	   find ./ -type f -exec sed -i 's/snd_soc_codec/snd_soc_component/g' {} \;
	   find ./ -type f -exec sed  -i 's/*codec/*component/g' {} \;
	   find ./ -type f -exec sed  -i 's/dai->codec/dai->component/g' {} \;
	   find ./ -type f -exec sed  -i 's/codec->dev/component->card->dev/g' {} \;
	   find ./ -type f -exec sed  -i 's/(codec)/(component)/g' {} \;
	    sed  -i 's/snd_soc_update_bits(codec/snd_soc_component_update_bits(component/g' i-sabre-k2m-codec.c
	    sed  -i 's/snd_soc_register_codec(dev/snd_soc_register_component(dev/g' i-sabre-k2m-codec.c
	    sed  -i 's/snd_soc_unregister_codec(dev/snd_soc_unregister_component(dev/g' i-sabre-k2m-codec.c
           #find ./ -type f -exec sed -i 's/snd_soc_codec *codec = dai->codec/snd_soc_component *component = dai->component/g' {} \;
	msg2 "modifying Makefile for ARCH"
          sed  -i '1 s/source/build/g' Makefile
	}
	
	build() {
	  cd "${srcdir}"/"$_pkgname"
	msg2 "Making modules"
	  make
	msg2 "Making overlay"
	  make dtbs
	msg2 "gzip-ing modules"
	  gzip -9 *.ko

	}
	
package() {
	_kernver=$(pacman -Q linux | sed -r 's#.* ([0-9]+\.[0-9]+).*#\1#')
	depends=("linux>=$_kernver" "linux<${_kernver/.*}.$(expr ${_kernver/*.} + 1)")
	KERNEL_VERSION=$(cat /usr/lib/modules/extramodules-$_kernver-ARCH/version)
	msg "Kernel = $KERNEL_VERSION"

	cd "$srcdir"/"$_pkgname"

        make -j4 DESTDIR="${pkgdir}/usr" modules_install

#	 install -d "$pkgdir/usr/lib/modules$(uname -r)/build"
#	 make DESTDIR="$pkgdir/" modules_install
#	msg2 "making pkg directories"
#	  mkdir -p "$pkgdir"/lib/modules/4.19.25-2-ARCH/kernel/sound/soc/bcm/
#	  mkdir "$pkgdir"/lib/modules/4.19.25-2-ARCH/kernel/sound/soc/codecs/
#	  mkdir -p "$pkgdir"/boot/overlays
#	msg2 "copying modules"
#	  cp i-sabre-q2m.ko.gz "$pkgdir"/usr/lib/modules/4.19.25-2-ARCH/kernel/sound/soc/bcm/
#	  cp i-sabre-q2m-codec.ko.gz "$pkgdir"/usr/lib/modules/4.19.25-2-ARCH/kernel/sound/soc/codecs/
#	msg2 "copying overlay"
#	  cp i-sabre-q2m.dtbo "$pkgdir"/boot/overlays/
	}
